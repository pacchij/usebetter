schema {
    query: Query
    mutation: Mutation
}

type Query {
    getAllOwnerTransactions(owner: String!): trans
    getAllReceiverTransactions(receiver: String!): trans
    getTransaction(transid: ID!)
}

type Mutation {
    updateTransactionState(transactionid: ID!, state: String!): trans
    createTransaction(owner:ID!, receiver: ID!, itemid: ID!, state: String!): trans
}

@key(fields: ["id", "state"])
@key(name: "ByOwner", fields:["ownerid"])
@key(name: "ByReceiver", fields: ["receiverid"])


type transactions @model 
 @auth(rules: [
  { allow: private },
  { allow: admins }
 ])
{  
    id: ID! @primaryKey(sortyKeyFields: ["state"])
    itemid: ID!
    ownerid: String! @index(name: "byOwner", queryFields: "transactionsByOwner")
    receiverid: String! @index(name: "byOwner", queryFields: "transactionsByOwner")
    state: Int!
}

type items @model 
@key(fields: "ownerid", "itemid", "datetime") 
{
    itemid: ID!
    ownerid: ID!
    asseturl: String!
    state: Int!
    datetime: AWSTimestamp!
}

getTransaction(by id and state)
updateTransaction(by id and state)

listTransactionsByOwner(ownerid, state)
listTransactionsByReceiver(receiverid, state)
getAllOwnerTransactions(owner: String!, datetime: AWSTimestamp!): mytrans